#다형성
"""
다형성(polymorphism)은 객체 지향 프로그래밍의 중요한 개념 중 하나입니다. 
다형성은 같은 이름의 메서드나 함수가 다른 객체에서 다른 동작을 하도록 만드는 기술입니다.
전달된 인자에 따라 함수 또는 연산의 기능이 달라지는 기능
2 + 3  5
'2' + '3'  '23'
'Hello ' + 'World'  'Hello World'
"""
class 동물:
    def 소리내기(self):
        print("동물이 소리를 냅니다.")

class 개(동물):
    def 소리내기(self):
        print("멍멍!")

class 고양이(동물):
    def 소리내기(self):
        print("야옹!")

def 동물소리내기(동물_인스턴스):
    동물_인스턴스.소리내기()

개_인스턴스 = 개()
고양이_인스턴스 = 고양이()

동물소리내기(개_인스턴스)   # 결과: 멍멍!
동물소리내기(고양이_인스턴스) # 결과: 야옹!
"""
메서드 오버라이딩은 상위 클래스의 메서드를 하위 클래스에서 재정의하는 과정이며,
다형성은 같은 인터페이스를 사용하여 서로 다른 객체가 서로 다른 작업을 수행할 수 있는 기능.
메서드 오버라이딩은 다형성을 구현하는 방법 중 하나입니다.
"""